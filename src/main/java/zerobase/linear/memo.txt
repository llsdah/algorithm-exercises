선형 자료구조

- 자료를 효율적으로 관리하기 위한 구조
- 관리 : 저장, 삭제, 탐색
- 배열, 연결리스트, 스택, 큐, 데크, 해시테이블

1. 배열
- 인덱스 통한 빠른 데이터 접근
- 고유한 길이

2. 연결리스트
- Linked List
- 데이터 공간 미리 할당 x 가변적
- 노드 : 데이터 저장 단위, 값과 포인터 구조
- 데이터 추가 : head mid tail 얀걀 직압 필요

3. 스택
- 후입선출
- 마지막에 들어온데이터가 먼저 나가는 구조 : 함수콜 스택, 함수콜 스택, 인터럽트 처리

4. 큐
- 선입선출
- 입력순으로 데이터 처리가 필요한 경우 = 프린터 출력 대기열, BFS(너비 탐색)

5. 데크
- 양쪽 삽입 삭제 가능 한구조
-

6. 해시테이블
- 키와 값으로 데이터 접근
- 키로 null을 넣을 수 없음
- 키 -> 해시 함수 -> 해시 값  -> 해시테이블
- 해시 출동 : 해시 테이블에서 같은공간에 서로다른 값을 저장하는 경우
=> 다른 키를 통해서 같은 해시 값이 도출되는 경우
=> 개발 주소법, 분리연결법
- 개방주소법 : 해시와 값이 1대1 관계 유지, 충돌시 테이블에서 비어있는 공간의 해시를 찾아 저장
=> 선형 탐사, 제곱 탐사, 이중 해싱
- 선형탐사 : 빈공간 순차 탐사 => 일차 군집화 문제 발생(데이터 집중화)
- 제곱탐사 : 빈공간을 n제곱만큼 간격 두고 탐사 => 이차 군집화 발생가능
- 이중해실 : 해싱함수를 이중으로 사용
=

- 분리연결법 : 해시테이블을 연결리스트 구성, 충돌시 연결리스트로 해당 테이블 연결


vs HashMap
- Map 인터페이스
- Key null 사용여부 (HashMAp만 가능)
- ThreadSafe
=> HashTable 가능, 멀티 쓰레드 환경 우수
=> HashMAp 불가, 싱글 쓰레드 환경 우수

